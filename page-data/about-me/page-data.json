{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/about-me","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"About Me\",\n  \"tags\": [\"about\", \"clojure\"],\n  \"emoji\": \"ðŸ‘‹\",\n  \"link\": \"https://nerds-den.com/about-me\",\n  \"modified\": \"2021-06-14T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"why-am-i-doing-this\"\n  }, \"Why am I doing this?\"), mdx(\"p\", null, \"I am a person who finds happiness in building something useful out of nothing - someone who is curious and passionate about technology.\"), mdx(\"p\", null, \"However, if there is a word to describe my current state of mind, it would be: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"frustrated\"), \".\"), mdx(\"p\", null, \"Frustrated by the mess we are in as software developers. Frustrated by how hard and slow it is to build reliable software. Frustrated by unknowingly inducing bugs while improving the system. Infuriated by developing or maintaining crappy software systems because your boss thinks it is fast and cheap.\"), mdx(\"p\", null, \"After watching \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.infoq.com/presentations/Simple-Made-Easy/\"\n  }, \"Rich Hickey's talk Simple Made Easy\"), \", I thought I found my answer. I thought learning Clojure(Script) would be the solution to my problems.\"), mdx(\"p\", null, \"I couldn't have been more wrong.\"), mdx(\"p\", null, \"Learning Clojure(Script) turned out to be a frustrating experience for me. The only materials I had available were books and the open internet. Trying to understand complex algorithms, and the functional way of thinking from a book is very difficult. I remember spending hours surfing the web, trying to find materials to better understand and code in Clojure(Script).\"), mdx(\"p\", null, \"The ideal way to learn Clojure(Script) would have been an online platform with curated problem statements to solve, covering all the data structures with a bunch of difficulty levels. For every set of questions, I would have enjoyed clear video explanations, including the underlying algorithm and thought process behind the proposed solution.\"), mdx(\"p\", null, \"Nerd's Den is that ideal solution for me. Its goal is to be a one-stop solution to become an expert in algorithms, data structures, system design, and Clojure(Script) programming.\"), mdx(\"h2\", {\n    \"id\": \"why-should-you-care\"\n  }, \"Why should you care?\"), mdx(\"p\", null, \"Nerd's Den will be an excellent fit for you if:  \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have no clue how to start building something and bring your idea to life.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You wish to learn skills to be a better problem solver without losing your sleep over it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want to know how to build scalable, reliable, and adaptable computer systems from scratch.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You need to prepare for an interview and excel at data structures & algorithms.\")), mdx(\"p\", null, \"No matter where you are in your journey, we are here to help you through that process. We wish to empower you to use your intellect and creative ideas towards something that matters, both to you and the world. At Nerd's Den we achieve it by making you an expert in algorithms, data structures, and system design by teaching you Clojure(Script).\"), mdx(\"h2\", {\n    \"id\": \"who-am-i\"\n  }, \"Who am I?\"), mdx(\"p\", null, \"I am your host, Pragyan Tripathi, responsible for almost everything on this website. I am obsessed with learning to be a better problem solver and teach students, early-stage software developers, and peers about my findings. I welcome you to hop on with me on this journey of self-improvement.\"), mdx(\"p\", null, \"If you are excited about being a force of change in the world, I invite you to join my email list. By signing up (it's free), you'll access our latest articles and tutorials right when they come out.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"About Me","tags":["about","clojure"],"emoji":"ðŸ‘‹","link":"https://nerds-den.com/about-me","modified":"June 14, 2021","modifiedTimestamp":"2021-06-14T00:00:00.000Z"},"references":[],"fields":{"slug":"/about-me"},"tableOfContents":{"items":[{"url":"#why-am-i-doing-this","title":"Why am I doing this?"},{"url":"#why-should-you-care","title":"Why should you care?"},{"url":"#who-am-i","title":"Who am I?"}]},"parent":{"relativePath":"about-me.md"}}},"pageContext":{"id":"0a5243ae-a72e-527c-9023-45e21ef167dd","previous":{"id":"671514ab-76b6-5989-a3d8-b84d55267d24","frontmatter":{"title":"Stack Based Interpreter In Clojure - Part 1","tags":["clojure","data-structions","stack","interpreter"]},"fields":{"slug":"/stack-based-interpreter-in-clojure-part-1"}},"next":null,"hasUntagged":false,"basePath":"/","tags":[{"tag":"about","totalCount":1,"slug":"/about","path":"/tag/about"},{"tag":"clojure","totalCount":9,"slug":"/clojure","path":"/tag/clojure"},{"tag":"data-structions","totalCount":8,"slug":"/data-structions","path":"/tag/data-structions"},{"tag":"interpreter","totalCount":8,"slug":"/interpreter","path":"/tag/interpreter"},{"tag":"stack","totalCount":8,"slug":"/stack","path":"/tag/stack"}]}},"staticQueryHashes":["1308211557","2744905544","467212769"]}